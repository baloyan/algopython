#
# 1.	Написать программу, которая будет складывать, вычитать, умножать или делить
# два числа. Числа и знак операции вводятся пользователем. После выполнения
# вычисления программа не должна завершаться, а должна запрашивать новые данные
# для вычислений. Завершение программы должно выполняться при вводе символа '0'
# в качестве знака операции. Если пользователь вводит неверный знак
# (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
# снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль,
# если он ввел 0 в качестве делителя.

print ("Добро пожаловать в калькулятор! Введите данные для вычисления.")
print("Для завершения программы введите ноль")

while True:
        i = input("Введите нужную операцию (+,-,*,/): ")
        if i == '0': break
        if i in ('+','-','*','/'):
                x = float(input("Введите значение x = "))
                y = float(input("Введите значение y = "))
                if i == '+':
                        print("%.2f" % (x+y))
                elif i == '-':
                        print("%.2f" % (x-y))
                elif i == '*':
                        print("%.2f" % (x*y))
                elif i == '/':
                        if y != 0:
                                print("%.2f" % (x/y))
                        else:
                                print("Нельзя делить на ноль, извините")
        else:
                print("Неверно, еще раз")

# 2.	Посчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры
# (4, 6 и 0) и 2 нечетные (3 и 5).

a = int(input("Ведите натуральное число: "))
even = odd = 0
while a > 0:
    if a % 2 == 0:
        even += 1
    else:
        odd += 1
    a = a // 10
print ("Четных числа - %d, Нечетных числа - %d" % (even, odd))

# 3.	Сформировать из введенного числа обратное по порядку входящих в него
# цифр и вывести на экран. Например, если введено число 3486,
#  то надо вывести число 6843.

a = int(input('Введите число'))

b = 0
while a > 0:
    b = b * 10 + a % 10
    a = a // 10

print(b)

# 4.	Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
# Количество элементов (n) вводится с клавиатуры.

n = int(input("Введите количество элементов"))
a = 1
b = 0
for i in range(n):
    b += a
    a /= -2
print(b)

# 5.	Вывести на экран коды и символы таблицы ASCII, начиная с символа
# под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-си

# 6.	В программе генерируется случайное целое число от 0 до 100.
# Пользователь должен его отгадать не более чем за 10 попыток. После каждой
# неудачной попытки должно сообщаться больше или меньше введенное пользователем
# число, чем то, что загадано. Если за 10 попыток число не отгадано,
# то вывести загаданное число.

from random import random
n = round(random() * 100)
i = 1

print ("Отгадайте за 10 попыток загаданное число")

while i <= 10:
    u = int(input(str(i) + ' попытка: '))
    if u > n:
        print('Меньше')
    elif u < n:
        print('Больше')
    else:
        print('Угадано! с %d попытки' % i)
        break
    i += 1
else:
    print('Не вышло! Было загадано:', n)

# 7.	Напишите программу, доказывающую или проверяющую, что для множества
# натуральных чисел выполняется равенство: 1+2+...+n = n(n+1)/2,
#  где n - любое натуральное число.

# 8.	Посчитать, сколько раз встречается определенная цифра в введенной
#  последовательности чисел. Количество вводимых чисел и цифра,
#  которую необходимо посчитать, задаются вводом с клавиатуры.

a = int(input("Количество чисел: "))
b = int(input("Цифра, которую необходимо посчитать: "))

count = 0
for i in range(1, a + 1):
    b = int(input("Число " + str(i) + ": "))
    while b > 0:
        if b % 10 == d:
            count += 1
        b = b // 10

print("Было введено %d цифр %d" % (count, d))

# 9. Среди натуральных чисел, которые были введены, найти
# наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр.

